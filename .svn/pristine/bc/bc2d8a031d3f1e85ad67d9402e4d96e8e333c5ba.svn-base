/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mecasut.cgut;

import com.mecasut.conexion.ConexionMySQL;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/**
 *
 * @author Cuauhtemoc Medina MuÃ±oz
 */
public class CgutNivelesAction extends org.apache.struts.action.Action {

    /* forward name="success" path="" */
    ConexionMySQL conexion = new ConexionMySQL();
    private static final String SUCCESS = "success";

    /**
     * This is the action called from the Struts framework.
     *
     * @param mapping The ActionMapping used to select this instance.
     * @param form The optional ActionForm bean for this request.
     * @param request The HTTP Request we are processing.
     * @param response The HTTP Response we are processing.
     * @throws java.lang.Exception
     * @return
     */
    @Override
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception {

        HttpSession sesion = request.getSession(false);
        CgutNivelesForm frm = (CgutNivelesForm) form;

        if (frm.getAsk().equals("buscaNivel")) {
            if (frm.getCboNivel() != -2) {
                String sql = "select * from nivel_pe where id_nivel =".concat(String.valueOf(frm.getCboNivel()));
                ResultSet rs = conexion.Consultar(sql);
                if (rs.next()) {
                    frm.setNombreNivel(rs.getString(2));
                    frm.setNombreDescripcion(rs.getString(3));
                    frm.setNombreAbreviatura(rs.getString(4));
                    if (rs.getBoolean(5)) {
                        frm.setNivelActivo("Desactivar Nivel");
                    } else {
                        frm.setNivelActivo("Activar Nivel");
                    }
                }
                conexion.Desconectar();
                return mapping.findForward(SUCCESS);
            } else {
                nuevoNivel(frm);
                conexion.Desconectar();
                return mapping.findForward(SUCCESS);
            }
        }


        if (frm.getAsk().equals("guardarNivel")) {
            if (frm.getCboNivel() != -2) {
                String sql = "update nivel_pe set nombre ='".concat(frm.getNombreNivel()).concat("', descripcion='").concat(frm.getNombreDescripcion()).concat("', abreviatura = '").concat(frm.getNombreAbreviatura()).concat("' where id_nivel='").concat(String.valueOf(frm.getCboNivel())).concat("'");
                conexion.Modificar(sql);
                conexion.Desconectar();
                nuevoNivel(frm);
                frm.setNiveles();
                return mapping.findForward(SUCCESS);
            } else {
                String sql2 = "insert into nivel_pe values(null,'".concat(frm.getNombreNivel()).concat("','").concat(frm.getNombreDescripcion()).concat("','").concat(frm.getNombreAbreviatura()).concat("',1)");
                conexion.Insertar(sql2);
                String nivel="";
                sql2= "SELECT max(id_nivel) FROM nivel_pe";
                ResultSet r = conexion.Consultar(sql2);
                while (r.next()){
                    nivel = r.getString(1);
                }
                //agregar la encuesta del indicador 7 al catalogo de encuestas
                sql2= "INSERT INTO encuestas () VALUES (null, 'Egresados Satisfechos',"
                        .concat(nivel).concat(",7,1)");
                conexion.Insertar(sql2);
                //agrega la encuesta del indicador 10 al catalogo
                sql2= "INSERT INTO encuestas () VALUES (null, 'Empleadores Satisfechos',"
                        .concat(nivel).concat(",10,1)");
                conexion.Insertar(sql2);
                conexion.Desconectar();
                nuevoNivel(frm);
                frm.setNiveles();
                return mapping.findForward(SUCCESS);
            }
        }

        if (frm.getAsk().equals("bajaNiveles")) {
            if (frm.getCboNivel() > 0) {
                String sql = "select activo from nivel_pe where id_nivel = ".concat(String.valueOf(frm.getCboNivel()));
                ResultSet rs = conexion.Consultar(sql);
                if (rs.next()) {
                    if (rs.getInt(1) == 1) {
                        String sql2 = "update nivel_pe set activo = 0 where id_nivel = ".concat(String.valueOf(frm.getCboNivel()));
                        conexion.Modificar(sql2);
                        conexion.Desconectar();
                        frm.setNivelActivo("Activar Nivel");
                        return mapping.findForward(SUCCESS);
                    } else {
                        String sql3 = "update nivel_pe set activo = 1 where id_nivel = ".concat(String.valueOf(frm.getCboNivel()));
                        conexion.Modificar(sql3);
                        conexion.Desconectar();
                        frm.setNivelActivo("Desactivar nivel");
                        return mapping.findForward(SUCCESS);
                    }
                }
            }
        }

        if (frm.getAsk().equals("nuevoNivel")) {
            nuevoNivel(frm);
            return mapping.findForward(SUCCESS);
        }

        return mapping.findForward(SUCCESS);
    }

    private void nuevoNivel(CgutNivelesForm frm) {
        frm.setCboNivel(-2);
        frm.setNombreNivel("");
        frm.setNombreAbreviatura("");
        frm.setNombreDescripcion("");
    }
}
